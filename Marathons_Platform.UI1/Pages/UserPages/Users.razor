@page "/user/get-all"
@using System.Text.Json
@inject IUserService<UserDto,UserCreateDto, UserUpdateDto> UserService
@inject NavigationManager navigationManager
@inject AuthService authService
<link href ="~/bootstrap/bootstrap.min.css">
<h3>Users</h3>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Surname</th>
                <th>Age</th>
                <th>Edit</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in UserService.Users)
            {
                <tr>
                    <td>@user.Name</td>
                    <td>@user.Surname</td>
                    <td>@user.Age</td>
                    <td>
                        <a class="btn btn-primary btn-sm" href="/user/@user.Id">Edit</a>
                    </td>
                    <td>
                        <a class="btn btn-danger btn-sm" @onclick="()=> Delete(user.Id)">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <a class="btn btn-primary" href="user/register">Register New User</a>
@code {
    Dictionary<int, List<string>> userRoles = new Dictionary<int, List<string>>();

    protected override async Task OnInitializedAsync()
    {
        if (await authService.IsUserAuthenticated())
        {
            userRoles = await authService.GetUserRoles();
            Console.WriteLine(JsonSerializer.Serialize(userRoles));

            bool isAdmin = userRoles.Any(role => role.Value.Contains("Admin"));

            if (isAdmin)
            {
                await UserService.GetUsers();
            }
            else
            {
                Console.WriteLine("Not authorized");
                navigationManager.NavigateTo("/notauth");
            }
        }
        else
        {
            Console.WriteLine("Not authenticated");
        }
    }
    async Task Delete(int id)
    {
        await UserService.DelUser(id);
        navigationManager.NavigateTo("/user/get-all", forceLoad: true);
    }
}
