@page "/badgemarathon/{id:int}"
@inject IBadgeMarathonService<BadgeMarathonDto, BadgeMarathonCreateDto> BadgeMarathonService
@inject IBadgeService<BadgeDto, BadgeCreateDto, BadgeUpdateDto> BadgeService
@inject IMarathonService<MarathonDto, MarathonCreateDto, MarathonUpdateDto> MarathonService
@inject NavigationManager navigationManager
<link href="~/bootstrap/bootstrap.min.css">

<PageTitle>Edit Badge Marathon</PageTitle>
<h3 class="d-flex justify-content-center text-uppercase text-dark">Edit Badge Marathon Information</h3>

<EditForm Model="@editBadgeMarathon" OnValidSubmit="HandleEditSubmit" FormName="EditBadgeMarathon">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Badge</label>
        <InputSelect @bind-Value="editBadgeMarathon.BadgeId" class="form-control">
            @foreach (var badge in badges)
            {
                <option value="@badge.Id">@badge.Title</option>
            }
        </InputSelect>
    </div>

    <div>
        <label>Marathon</label>
        <InputSelect @bind-Value="editBadgeMarathon.MarathonId" class="form-control">
            @foreach (var marathon in marathons)
            {
                <option value="@marathon.Id">@marathon.Title</option>
            }
        </InputSelect>
    </div>

    <br />

    <button type="submit" class="btn btn-primary">Update Badge Marathon Info</button>
</EditForm>

@code {
    private BadgeMarathonDto editBadgeMarathon = new BadgeMarathonDto();
    private List<BadgeDto> badges = new List<BadgeDto>();
    private List<MarathonDto> marathons = new List<MarathonDto>();

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        editBadgeMarathon = await BadgeMarathonService.GetBadgeMarathonById(Id);
        badges = await BadgeService.GetBadges();
        marathons = await MarathonService.GetMarathons();
    }

    private async Task HandleEditSubmit()
    {
        await BadgeMarathonService.UpdateBadgeMarathon(editBadgeMarathon);
        navigationManager.NavigateTo("/badgemarathon/get-all");
    }
}
